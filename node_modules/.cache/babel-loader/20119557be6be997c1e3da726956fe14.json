{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mudassir Mukhtar\\\\Desktop\\\\web\\\\OLX-PK\\\\src\\\\containers\\\\Chat\\\\index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { get_users } from '../../store/action';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from '../../config/firebase';\nimport img from '../images/search.png'; // import { library } from '@fortawesome/fontawesome-svg-core'\n// import { fab } from '@fortawesome/free-brands-svg-icons'\n// import { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n\n    this.chat = user => {\n      this.setState({\n        chat_user: user\n      });\n      let current_user = this.props.create_user;\n      let merge_uid = this.uid_merge(current_user.uid, user.uid);\n      this.get_messages(merge_uid);\n    };\n\n    this.sent_message = () => {\n      let user = this.props.create_user;\n      let chat_user = this.state.chat_user;\n      let merge_uid = this.uid_merge(user.uid, chat_user.uid); // var ref= firebase.storage().ref().child(`images/${this.state.file.name}`).put(this.state.file)\n      // ref.on('state_changed', function(snapshot){\n      //     // // Observe state change events such as progress, pause, and resume\n      //     // // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      //     // var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      //     // console.log('Upload is ' + progress + '% done');\n      //     // switch (snapshot.state) {\n      //     //   case firebase.storage.TaskState.PAUSED: // or 'paused'\n      //     //     console.log('Upload is paused');\n      //     //     break;\n      //     //   case firebase.storage.TaskState.RUNNING: // or 'running'\n      //     //     console.log('Upload is running');\n      //     //     break;\n      //     // }\n      //   }, function(error) {\n      //     // Handle unsuccessful uploads\n      //   }, function() {\n      //     // Handle successful uploads on complete\n      //     // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      //     ref.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n      //       console.log('File available at', downloadURL);\n      //     });\n      //   });\n\n      firebase.database().ref('/').child(`chats/${merge_uid}`).push({\n        message: this.state.message,\n        name: user.name,\n        uid: user.uid\n      }); // console.log(this.uid_merge(user.uid,chat_user.uid))\n      // this.state.chats.push({\n      //     message:this.state.message\n      // })\n\n      this.setState({\n        // chats:this.state.chats,\n        message: \"\"\n      });\n      console.log(this.state.message);\n    };\n\n    this.get_messages = uid => {\n      firebase.database().ref('/').child(`chats/${uid}`).on('child_added', messages => {\n        // console.log('mess==>',messages.val())\n        this.state.chats.push(messages.val());\n        this.setState({\n          chats: this.state.chats\n        });\n      });\n    };\n\n    this.state = {\n      chat_user: {},\n      chats: [],\n      message: null,\n      file: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.get_users();\n  }\n\n  uid_merge(uid1, uid2) {\n    if (uid1 < uid2) {\n      return uid1 + uid2;\n    } else {\n      return uid2 + uid1;\n    }\n  }\n\n  enterPressed(event) {\n    var code = event.keyCode || event.which;\n\n    if (code === 13) {\n      //13 is the enter keycode\n      //Do stuff in here\n      // alert('ok')\n      this.sent_message();\n    }\n  }\n\n  render() {\n    let user = this.props.create_user;\n    console.log(\"firebase users==chat=>\", this.props.chats);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-arya\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              style: {\n                width: '300px',\n                margin: \"6px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Search or start new chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn  btn-secondary\",\n                  onClick: () => this.chat(0),\n                  type: \"button\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: '20px'\n                    },\n                    src: img,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this), \"                                    \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imgprofile\",\n                src: user.profile,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imgprofile\",\n                src: user.profile,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imgprofile\",\n                src: user.profile,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imgprofile\",\n                src: user.profile,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-list\",\n            children: this.props.users.map((v, i) => {\n              return v.uid !== user.uid && /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"user \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"row pointer\",\n                  onClick: () => this.chat(v),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"imgprofile\",\n                      style: {\n                        marginLeft: \"17px\"\n                      },\n                      src: v.profile,\n                      alt: \"\",\n                      width: \"24\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"contant-p\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: v.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 69\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 62\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"convesation\",\n          children: Object.keys(this.state.chat_user).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"convesation-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imgprofile\",\n                src: this.state.chat_user.profile,\n                alt: \"\",\n                width: \"24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                style: {\n                  maxWidth: \"10px\"\n                },\n                children: this.state.chat_user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"sms-list \",\n              children: this.state.chats.map((v, i) => {\n                // return<li style={{marginLeft:v.uid===user.uid?\"20px\":\"-20px\"}} key={i}>{v.message}</li>\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: v.uid === user.uid ? \"UserSMS SMS\" : \"ChatSMS SMS\",\n                  children: v.message\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 48\n                }, this); // {let counter=counter + v}\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-1 chat-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"sms-input\",\n                value: this.state.message,\n                onChange: e => this.setState({\n                  message: e.target.value\n                }),\n                placeholder: \"Enter your message\",\n                \"aria-label\": \"Recipient's username\",\n                \"aria-describedby\": \"basic-addon2\",\n                onKeyPress: this.enterPressed.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary btn-lg\",\n                  onClick: () => this.sent_message(),\n                  type: \"button\",\n                  children: \"Sent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginTop: '40%',\n                marginBottom: \"40%\"\n              },\n              class: \"btn btn-outline-success\",\n              onClick: () => this.chat(0),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), \"Show All User\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  create_user: state.create_user,\n  users: state.users\n});\n\nconst mapDispatchToProp = dispatch => ({\n  // set_data: ()=> console.log(\"Hello\")\n  get_users: () => dispatch(get_users()) // facebook_login: (history)=>dispatch(facebook_login(history)) ,\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProp)(Chat);","map":{"version":3,"sources":["C:/Users/Mudassir Mukhtar/Desktop/web/OLX-PK/src/containers/Chat/index.jsx"],"names":["React","connect","get_users","firebase","img","Chat","Component","constructor","chat","user","setState","chat_user","current_user","props","create_user","merge_uid","uid_merge","uid","get_messages","sent_message","state","database","ref","child","push","message","name","console","log","on","messages","chats","val","file","componentDidMount","uid1","uid2","enterPressed","event","code","keyCode","which","render","display","width","margin","textAlign","profile","users","map","v","i","marginLeft","Object","keys","length","maxWidth","e","target","value","bind","marginTop","marginBottom","mapStateToProps","mapDispatchToProp","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { get_users } from '../../store/action'\r\nimport './style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport firebase from '../../config/firebase';\r\nimport img from '../images/search.png';\r\n// import { library } from '@fortawesome/fontawesome-svg-core'\r\n// import { fab } from '@fortawesome/free-brands-svg-icons'\r\n// import { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nclass Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            chat_user: {},\r\n            chats: [],\r\n            message: null,\r\n            file: null\r\n        }\r\n\r\n    }\r\n    chat = (user) => {\r\n        this.setState({\r\n            chat_user: user\r\n        })\r\n        let current_user = this.props.create_user;\r\n        let merge_uid = this.uid_merge(current_user.uid, user.uid);\r\n        \r\n        this.get_messages(merge_uid)\r\n    }\r\n    componentDidMount() {\r\n        this.props.get_users()\r\n    }\r\n    uid_merge(uid1, uid2) {\r\n        if (uid1 < uid2) {\r\n            return uid1 + uid2\r\n        } else {\r\n            return uid2 + uid1\r\n        }\r\n    }\r\n\r\n    sent_message = () => {\r\n        let user = this.props.create_user;\r\n        let chat_user = this.state.chat_user;\r\n        let merge_uid = this.uid_merge(user.uid, chat_user.uid);\r\n        // var ref= firebase.storage().ref().child(`images/${this.state.file.name}`).put(this.state.file)\r\n\r\n        // ref.on('state_changed', function(snapshot){\r\n        //     // // Observe state change events such as progress, pause, and resume\r\n        //     // // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        //     // var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        //     // console.log('Upload is ' + progress + '% done');\r\n        //     // switch (snapshot.state) {\r\n        //     //   case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n        //     //     console.log('Upload is paused');\r\n        //     //     break;\r\n        //     //   case firebase.storage.TaskState.RUNNING: // or 'running'\r\n        //     //     console.log('Upload is running');\r\n        //     //     break;\r\n        //     // }\r\n        //   }, function(error) {\r\n        //     // Handle unsuccessful uploads\r\n        //   }, function() {\r\n        //     // Handle successful uploads on complete\r\n        //     // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n        //     ref.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n        //       console.log('File available at', downloadURL);\r\n        //     });\r\n        //   });\r\n\r\n        firebase.database().ref('/').child(`chats/${merge_uid}`).push({\r\n            message: this.state.message,\r\n            name: user.name,\r\n            uid: user.uid,\r\n\r\n        })\r\n\r\n        // console.log(this.uid_merge(user.uid,chat_user.uid))\r\n\r\n        // this.state.chats.push({\r\n        //     message:this.state.message\r\n        // })\r\n        this.setState({\r\n            // chats:this.state.chats,\r\n            message: \"\"\r\n        })\r\n        console.log(this.state.message)\r\n    }\r\n    get_messages = (uid) => {\r\n        firebase.database().ref('/').child(`chats/${uid}`).on('child_added', (messages) => {\r\n            // console.log('mess==>',messages.val())\r\n            this.state.chats.push(messages.val())\r\n            this.setState({\r\n                chats: this.state.chats\r\n            })\r\n        })\r\n    }\r\n    enterPressed(event) {\r\n        var code = event.keyCode || event.which;\r\n        if (code === 13) { //13 is the enter keycode\r\n            //Do stuff in here\r\n            // alert('ok')\r\n            this.sent_message()\r\n        }\r\n    }\r\n    render() {\r\n        let user = this.props.create_user;\r\n\r\n        console.log(\"firebase users==chat=>\", this.props.chats)\r\n        return (\r\n            <div className=\"container chat-container\" >\r\n\r\n                <div style={{ display: \"flex\" }} >\r\n                    {/* <div style={{ display: \"flex\" }}  className=\"chat-container\"> */}\r\n                    <div className={\"conversation-arya\"}>\r\n                        <div>\r\n                            <div className=\"input-group\" style={{ width: '300px', margin: \"6px\" }}>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Search or start new chat\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <button className=\"btn  btn-secondary\" onClick={() => this.chat(0)} type=\"button\">\r\n                                        <img style={{ width: '20px' }} src={img} alt=\"\" />                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <h4 style={{ textAlign: 'center' }}>{user.name}</h4>\r\n                            <center>\r\n                                <img className=\"imgprofile\" src={user.profile} alt=\"\" />\r\n                                <img className=\"imgprofile\" src={user.profile} alt=\"\" />\r\n                                <img className=\"imgprofile\" src={user.profile} alt=\"\" />\r\n                                <img className=\"imgprofile\" src={user.profile} alt=\"\" />\r\n                            </center>\r\n                            {/* <h6>{user.email}</h6> */}\r\n                            {/* <h4 >Chat User</h4> */}\r\n                        </div>\r\n\r\n                        <div  className={\"conversation-list\"}>\r\n                            {this.props.users.map((v, i) => {\r\n                                return v.uid !== user.uid && <li key={i} className=\"user \">\r\n                                    <div class=\"row pointer\"  onClick={() => this.chat(v)}>\r\n                                        <div>\r\n                                            <img className=\"imgprofile\"style={{marginLeft:\"17px\"}} src={v.profile} alt=\"\" width=\"24\" />\r\n                                        </div>\r\n                                        <div className=\"contant-p\"> <b>{v.name}</b> </div>\r\n                                        <span className=\"text-right\">\r\n                                            {/* <button onClick={() => this.chat(v)} className=\"btn btn-outline-success\">\r\n                                                Chat\r\n                                        </button> */}\r\n                                        </span>\r\n\r\n                                    </div>\r\n\r\n                                </li>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"convesation\">\r\n\r\n                        {Object.keys(this.state.chat_user).length ?\r\n                            <div>\r\n                                <div className=\"convesation-bar\">\r\n\r\n                                    <img className=\"imgprofile\" src={this.state.chat_user.profile} alt=\"\" width=\"24\" />\r\n                                    <b style={{ maxWidth: \"10px\" }}>{this.state.chat_user.name}</b>\r\n                                </div>\r\n                                <ul className=\"sms-list \">\r\n                                    {this.state.chats.map((v, i) => {\r\n                                        // return<li style={{marginLeft:v.uid===user.uid?\"20px\":\"-20px\"}} key={i}>{v.message}</li>\r\n                                        return <li className={v.uid === user.uid ? \"UserSMS SMS\" : \"ChatSMS SMS\"} key={i}>{v.message}</li>\r\n                                        // {let counter=counter + v}\r\n                                    })}\r\n                                </ul>\r\n                                <div className=\"input-group mb-1 chat-input\">\r\n                                    {/* <input type=\"file\" onChange={(e) => this.setState({ file: e.target.files[0] })} /> */}\r\n                                    <input type=\"text\" className=\"sms-input\"\r\n                                        value={this.state.message}\r\n                                        onChange={(e) => this.setState({ message: e.target.value })}\r\n                                        placeholder=\"Enter your message\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        onKeyPress={this.enterPressed.bind(this)}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-outline-secondary btn-lg\"\r\n                                            onClick={() => this.sent_message()}\r\n                                            type=\"button\">Sent</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            :\r\n                            <div>\r\n                                 {/* <h4 style={{ marginTop: '42%', marginBottom: \"42%\" }}>No user</h4> */}\r\n                            <button style={{ marginTop: '40%', marginBottom: \"40%\" }} class=\"btn btn-outline-success\" \r\n                            onClick={() => this.chat(0)}>\r\n                                <i class=\"fa fa-trash\"></i>\r\n                                Show All User\r\n                                </button>\r\n\r\n                            </div>\r\n                           \r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    create_user: state.create_user,\r\n    users: state.users\r\n})\r\nconst mapDispatchToProp = (dispatch) => ({\r\n    // set_data: ()=> console.log(\"Hello\")\r\n    get_users: () => dispatch(get_users())\r\n    // facebook_login: (history)=>dispatch(facebook_login(history)) ,\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}